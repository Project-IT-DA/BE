# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  S3_BUCKET_NAME: cheoljundeploy
  CODE_DEPLOY_APPLICATION_NAME: cheoljundeploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: cheoljundeploy

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: make application.yml
      run: |
        cd ./src/main/resources
        touch ./application.yml
        echo "${{secrets.IT_DA_YML}}" > ./application.yml
      shell: bash

    - name: Setup MySQL
      uses: samin/mysql-action@v1
      with:
        character set server: 'utf8' 
        mysql database: 'springboot-db.cgc29q5lrmev.us-east-1.rds.amazonaws.com' 
        mysql user: 'admin'
        mysql password: ${{ secrets.MYSQL_PASSWORD }}


    - name: Build with Gradle
      run: |
        chmod +x ./gradlew
        ./gradlew build
        
    # (4) AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{secrets.AWS_ACCESS_KEY}}
        aws-secret-access-key: ${{secrets.AWS_SECRET_KEY}}
        aws-region: ${{secret.AWS_REGION}}

    # (5) 빌드 결과물을 S3 버킷에 업로드
    - name: Upload to AWS S3
      run: |
        aws deploy push \
          --application-name ${{env.CODE_DEPLOY_APPLICATION_NAME}} \
          --ignore-hidden-files \
          --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
          --source .

    # (6) S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
    - name: Deploy to AWS EC2 from S3
      run: |
        aws deploy create-deployment \
          --application-name ${{env.CODE_DEPLOY_APPLICATION_NAME}} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME}} \
          --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
