# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

env :
  S3_BUCKET_NAME: cheoljundeploy
  CODE_DEPLOY_APPLICATION_NAME: cheoljundeploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: cheoljundeploy

permissions:
  contents: read

jobs:
  deploy:
    name : Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: checkout
      uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
     
   #(3) Build with gradle
    - name: make application.yml
      run: |
        cd ./src/main/resources
        touch ./application.yml
        echo "${{secrets.DEVELKIT_APPLICATION_YML}}" > ./application.yml
      shell: bash

    - name: Build with Gradle
      run: |
        chmod +x ./gradlew
        ./gradlew build
        
      #(3)jar 파일
    - name : Make Directory & copy jar
      run : |
        mkdir -p deploy
        cp ./build/libs/*.jar ./deploy
        cp appspec.yml ./deploy
        cp ./scripts/*.sh ./deploy
        zip -r ./$GITHUB_SHA.zip ./deploy
      shell: bash

      #(4) aws 인증
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region : ${{ secrets.AWS_REGION }}

      #(5) 빌드 결과물을 s3 버킷에 업로드
    - name: Upload to AWS S3
      run : aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://${{env.S3_BUCKET_NAME}}/


    - name: Deploy to AWS EC2 from S3
      run : |
        aws deploy create-deployment \
          --application-name ${{env.CODE_DEPLOY_APPLICATION_NAME}} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME}} \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=${{env.S3_BUCKET_NAME}},key=$GITHUB_SHA.zip,bundleType=zip

